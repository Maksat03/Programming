# pypi дан консольдағы түсті өзгерту импорттын қолдану үлгісі

from colorama import init # colorama модулынен тек init ты гана колдана алатындай импорттаймыз
from colorama import Fore, Back, Style # colorama модулынен тусин озгертетын жерлерды гана колдана алатындай импорттаймыз
from math import * # sqrt, pi деп те алса болады брак бул жагдайда тек sqrt жане pi ды гана колданасын ал * кылсан барын переводы все деген соз
from random import randint as r # as аркылы узак атты модульдар болса атын ауыстырып кыскартуга болады жане егерде сол модуль атты функция бар боса онда кате болып куып калады аттары бырдей болса сол себепты as ы колданган дурс
print( sqrt(25) ) # экранга 25 тын тубырастысын шгарамыз
print( pi ) # экранга пидын манын шгарамыз

# рандом аркылы 500 бен 1000 арасындагы сандарды 10 арте шгарамз шгарамыз

for m in range(10): 
  	# егер as r деп жазбаганда дурс болар еды брак быздын жагдайда жазылган сон кате болады   print( randint(500, 1000) )
	print( r(500, 1000) )

# экранға Hello my friend сөзінін артқы фонынын түсін ақ ал жазылу түсін қара қылып шығарамыз жәнеде "Hello 'my' friend" деп те жазуға болады 
# бірінші қолдану түрі
print(Fore.BLACK + Back.WHITE + 'Hello \'my\' friend')

print(Back.RESET)

# екінші қолдану түрі жәнеде осыны қолданған дұрысырақ
print(Fore.RED)

print('Hello \'my\' friend')

#--------------------АЯҚТАЛДЫ--------------------

# шартты оператор қолдану үлгісі
# қарапайым калькулятор

# келесі шығатын сөздердін жазылуын сары ал артқы фонын қызыл түсті қылып шығарамыз
print(Fore.MAGENTA)

# қалаған есімді айнымалы құраймыз жәнеде input функциясын пайдаланып экранға жаза алатындай қыламыз input функциясы командная строкаға жазуға мүмкіндік беретін функция
anyvar = input('Что нужно сделать + или - или * или / \nУкажите что нужно сделать: ')

# келесі шығатын сөздердін жазылуын көк ал артқы фонын жасыл түсті қылып шығарамыз
print(Fore.BLUE)

# шарт құрастырамыз . Егерде шарт ақиқат болса(True) онда команда орындалады
# шарт: Егерде anyvar тең болса + ке онда орындалады ...
if anyvar == '+':
	print(Fore.WHITE)
	# бірінші және екінші санды жазатындай айнымалы құраймыз және экранға шығарамыз
	a = float(input('Введите первое число: '))
	b = float(input('Введите второе число: '))
	# бірінші және екінші санның косындысына тең айнымалы құрастырамыз
	c = a + b

	# экранға шыққан сөздердің жазылуын қара ал артқы фонын ақ кыламыз
	print(Fore.RED)

	# соңында екі санның қосындысын экранға шығарамыз
	print(str(a) + ' + ' + str(b) + ' равно ' + str(c))

# elif ол бастапкы шарт(if) орындалмай калган жағдайда орындалатын шарт elif сөзі else(әйтпесе) , if(егер) сөзінен тұрады else сөзі егерде бастапқы шарт орындалмай қалса онда if келесі шарт орындалады
elif anyvar == '-':
	# бірінші және екінші санды жазатындай айнымалы құраймыз және экранға шығарамыз
	a = float(input('Введите первое число: '))
	b = float(input('Введите второе число: '))
	# бірінші және екінші санның алымына тең айнымалы құрастырамыз
	c = a - b

	# экранға шыққан сөздердің жазылуын қара ал артқы фонын ақ кыламыз
	print(Fore.RED)

	# соңында екі санның алымын экранға шығарамыз
	print(str(a) + ' - ' + str(b) + ' равно ' + str(c))

# elif ол бастап0ы шарт(if) орындалмай 0ал5ан жағдайда орындалатын шарт elif сөзі else(әйтпесе) , if(егер) сөзінен тұрады else сөзі егерде бастапқы шарт орындалмай қалса онда if келесі шарт орындалады
elif anyvar == '*':
	# бірінші және екінші санды жазатындай айнымалы құраймыз және экранға шығарамыз
  	a = float(input('Введите первое число: '))
  	b = float(input('Введите второе число: '))
  	# бірінші және екінші санның өбейтіндісіне тең айнымалы құрастырамыз
  	c = a * b
  	# соңында екі санның көбейтіндісін экранға шығарамыз
  	print(str(a) + ' * ' + str(b) + ' равно ' + str(c))

# elif ол бастап0ы шарт(if) орындалмай 0ал5ан жағдайда орындалатын шарт elif сөзі else(әйтпесе) , if(егер) сөзінен тұрады else сөзі егерде бастапқы шарт орындалмай қалса онда if келесі шарт орындалады
elif anyvar == '/':
	# бірінші және екінші санды жазатындай айнымалы құраймыз және экранға шығарамыз
	a = float(input('Введите первое число: '))
	b = float(input('Введите второе число: '))
	# бірінші және екінші санның бөліміне тең айнымалы құрастырамыз
	c = a / b
	# соңында екі санның бөлімін экранға шығарамыз
	print(str(a) + ' / ' + str(b) + ' равно ' + str(c))

# else сөзі әйтпесе магынаны білдіреды, егерде ешбір шарт орындалмаса онда осы команда орындалады
else:
	# экранға қате операция жазылғанын шығарамыз
	print('Выбрана неверная операция!.\nВыборите только один из них +, -, *, / операцию')


#--------------------АЯҚТАЛДЫ--------------------
                                                                                                 
# While операторын қолдану үлгісі №1(break), №2(continue).                                       
# Сложный способ создание пароль 

name = input('Введите пароль: ') # пользаватель пароль енгызеды
while True:                      # цикл уайл акикат сол себепты ол токтаусыз орындала береды пока озыныз токтатпаса бомаса бреак созы аркылы токтайды  
	if(name == 'Maksat2003'):     # егер пользаватель енгызген пароль Maksat2003 ке тен болса онда ...
		print('Пароль ' + name + ' правильно!')            # экранга пароль дурыс екенын шгарамыз да ...
		break                                                    # циклды аяктап ягни токтатып ары карай кетемыз
	
	elif(len(name) == 0):                                # айтпесес егер ештене жазылмай отылып кетсе онда ...
		print('Пароль не указано!')                        # экранга пароль терылмегенын экранга шгарамыз
		name = input('Введите пароль! : ')                # жанеде кайтадан теруды айтамыз
		continue                                          # пока программа дурс болып токтамаганша кайталай береды
	else:                                                   # айтпесе ... 
		print('Пароль не верный!')                         # пароль дурыс емес екендыгын экранга шгарамыз
		name = input('Введите пароль занова! : ')          # жанеде кайта теруды айтамыз
		continue                                            # пока программа дурс болып токтамаганша кайталай береды

# Легкий способ создание пароль

name1 = input('password : ')  # пользаватель пароль енгызеды
while name1 != 'Maksat2003':   # пока пароль тен болмаганша Maksat2003 ...
	print('False')               # экранга кате екендыгын шгара беремыз
	name1 = input('try again : ')     # жанеде кайта теруды айтамыз

print('True')  # егер дурыс болган жагдайда экранга дурыс екендыгын шгарамыз

#--------------------Аяқталды--------------------

# fOR циклы қолдану үлгісі

for j in 'hello world':
	if j == 'a':
		break
else:
	print('Буквы "а" нету в слове')

for i in 'hello world':
	if i =='w':
		print('Буквы w есть в слове')
		break
else:
	print('такой буквы нету в слове')

for i in range(10): # икл он марте кайталанады бырыншы i тен болады 0ге суйтып суйтып кетып i ен болганда 10га цикл аякталады ягни цикл 0-9 арасындар орындалады 0 ол 1 болып саналады
	print(i)
#--------------------Аяқталды--------------------


# Массивті қолдану үлгілері 

# 1 інші қолдану үлгісі

array1 = 'Hello'

print( array1[3] )	

# 2нші қолдану  үлгісі

array2 = ['Kantai Maksat', 3, 5]

if 'Kantai Maksat' in array2:
	print('yes')

if 4 not in array2:
	print('No')

if 3 in array2:
	print('yes')

array2.append('5') # массивке тагы быр массив косады 
print('В массиве находится ' + str(len(array2)) + ' элементов') # массивта канша элемен бар екендыгын жэкранга шгарады len санын узындыгын корсететын функция

array2.remove('5') # массивтен осындай массивты алып тастайды
print('В массиве находится ' + str(len(array2)) + ' элементов')

array2.insert(1, 6) # массивте 1 ыншы орындагы массивтын орнына 6 санын шгарып сол орынды алып отырады да ары карай жалгастырып кетеды
print(array2)

array3 = [1, 2, 3]

print(max(array3)) # максималды санды шгарамыз
print(min(array3)) # минималды санды шгарамыз

array4 = [1, 2, 3, 3, 3, 4, 5, 6, 7, 7, 7]

print(array4.count(7)) # 7 саны неше рет кайталанганын экранга шгарамыз 

array4.reverse() # массивты керсынше кылып орналастырады

print(array4)

array5 = [1, 2, 3, [5, 6, 7]]

print(array5[3][2])

# for циклын массивте колдану range , list 

num1 = list(range(0, 101, 2)) # range функциясы белгылы саннан белгылы санга дейынгы сандар аралыгын камтиды ал list соларды массивке айналдыруга колданады

print(num1)

num2 = [1, 2, 3, 4, 5]

for element in num2:
	print( str(element) + '!')

for test in range(15): # экранга Hello озын 15 рет шгарады фор циклы ар быр санга тыр токталып шгады
	print( "Hello" )


#--------------------Аяқталды--------------------

# Функция колдану адыстеры

def max(x,y): # def функция создать етуге колданады ал max ол переменная л сонын ышындегы аргументтер x , y оларды сонында белгылы быр сан или строка берыледы
	'''Функция который возврашет большое число''' # документация ол функциянын кызметын корсетеды ол озыннын библиотекан болса кажет болады
	if x > y:
		return x # экранга x тын манын кайтарып шагарады егер шарт акикат болса возврашает
	else:
		return y # айтпесе экранга  y тын манын кайта шгарады возврашает
	print('Maks') # жанеде return нан кейын жазылган код мулде ешкашан орындалмайды

x = float(input("Введите первое число : ")) # x сан енгызеды
y = float(input('Ведите второе число : '))  # y сан енгызеды

print(max.__doc__) # max функциясындагы документацияны экранга шгару 
print( max(x,y) ) # экранга max функциясын шыккан манын шгару

def hello(name):
	print("Hello " + name + ' !!!')

def name():
	return input('Введите Ваше имя : ')

var = hello # hello функциясын var есымды переменнаяга тенестыру

var(name()) # var функциясын косу жане ышындегы аргументын name функциясына тенестыру

def exc(text):
	assert text != '' # егер text бос болып калса онда assert ты колданамыщ жане сондай болып калса AssertionError исключениясы экранга шгып программа аякталып калады
	print(str(text) + '!') # егер бос болып калмаса экранга text созыне ! леп белгысын косып шгару 
exc('m')


mal = input("Что то")
assert mal != ''
#--------------------Аяқталды--------------------

# Исключение B Питоне

try:                         # попытаемся переводы
	print(number / 0)          # экранга жок переменнаяны 0 ге болемыз
#TypeError ол типтеры быр бырыне сай келмесе онда осы ошибка шгады
#ImportError егер импортау керек зат жок болса онда осы ошибка шгады
#ZeroDivisionError егер санды 0-ге болсек осы ошибка шгады
#NameError жок переменнаяны колдансак осы ошибка шыгады
except (TypeError, ImportError):  # ловит исключения TypeError and ImportError
	print('Поймано плохое исключение') # экранга исключения бар екендыгын шгарамыз
except ZeroDivisionError: # ловит исключения ZeroDivisionError
	print('Поймано исключение ДелениеПоНулю') # экранга санды нолге болуге болмайтын исключения шыккандыгын шгарамыз
except NameError: # ловит исключения NameError
	print('Поймано исключенте НеСуществующаяПеременная') # экранга жок переменная колданганын шгарамыз

except: # ловит исключения ВСЕ 
	print("Поймано исключение ... какое - то! ")   # ЭКРАНГА исключения бар екендыгын шгарамыз
finally: # finally исключения шыксада шыкпаса да экранга шгады ол жай исключения ыздеу токтатылды деген сиякты ретынде колданады
	print('Конец поимки') # экранга исключения табу токтатылганын шгарамыз
print('Программа завершена') 

# Мунда ZeroDivisionError исключениесын таппайды тек NameError исключениесын гана табады себебы питонда код тобеден астыга жане сол дан онга карай орындалады сол себепты бырыншы жок перемменная number ды табады исключение

# Собственный исключении 

class MaksError(Exception): # class созы аркылы озымыздын исключениямызды пайда кылса болады ал мунда MaksError ол озымнын шгарган исключениям бул озым быр программа шгарганда быр кателык кеткен жагдайда шгара алатындай мумкыншылык береды жанеде жакшанын ышыне Exception созын жазу керек
	pass # бос калдырып кету магынасы брак негызынде мунда озынын исключенияннын параметрлерын енгызеды

# жанеде келесы кодта озын быр ойынба шыгарганда керек болады мысалы исключения жок болсада бар кылып озыннын исключениянды шгарсан болады ол raise аркылы орындалады жане де ышыне не себепты шыкканын жазып койса болады

try:
	weather = 'Good'
	if weather == 'Good':
		raise MaksError(' не Себепты')
except MaksError:
	print('Поймано исключение MaksError')
	raise

#--------------------Аяқталды--------------------

# Работа с файлами
'''
'r'(read) - Чтение файла
'w'(write) - Перезаписи файла жанеде егеде ол файл бар болса ол полный удалит етылып басынан жазылады ал егер жок болса пайда болады 
'a'(append) - Добавление файла
'b'(binary mode) - бинарный режим для использвание музыку или картинок или же видео
'''
# режим ('r') чтение файла основной пример

file_0 = open('test.txt', 'r') # open функциясы ашады быр нарсены file_0 переменная ал опен функциясынын ышынде не файл екендыгы жане кай режимде колданатындыгын жазады

print( file_0.read() ) # экранга file_0  переменнаясындагы файлдындын ол быздын жагдайдай test.txtты нын ышындегы создерды шгарады ал read функциясы ол окиды сол файлга кыреды

file_0.close() # жанеде сонында файлды жапкан дурс

# режим ('r') чтение файла пример №2

filename_0 = input('Укажите файл : ')
file_1 = open(filename_0, 'r')

print('В данном файле ' + str(len(file_1.read())) + ' символов')

file_1.close()

# режим ('r' - read) чтение файла пример №3 белгылы байт аркылы катар катар  экранга шыгарамыз белгылы байттарга байланысты бул егер файл памяты 1 гб болса ал питоннын оперативный памяты 0.5 гб боса колданга оте жаксы олып олып аз аз паамяттен алып экранга шгаруга болады айтпесе программа шыгып ушып кетеды

file_2 = open('test.txt', 'r')
print( file_2.read(6) ) # экранга 6 байтка тен нарсены шгару 
print( file_2.read(4) ) # ал мунда сол 6ты байтан кейынгы 4 байтка тен нарсены шгару ар осылай жазылган сайын ар келген байттан ары карай есептелып экранга шыгып отырады
file_2.close()

# режим ('r' - read) чтение файла пример №4 выводим на экран каждую строку в файле

file = open('test.txt', 'r')

strings = file.readlines() # readlines функциясы айлдагы катарды санайды жане шгарады

for string in strings:
	print( string )                     # экранга ар катардагы создерд сойлемдерды ар оз орнымен катармен шгару

file.close()

# режим ('w' - write) перезаписи файла 

filename_1 = input('Введите названия файла : ')
text = input('Какой текст хотите поместить в файл?: ')
file_3 = open(filename_1, 'w') 
file_3.write( text ) # write функцисы ол жазады сол файлдага берылген нарсены
file_3.close()

# режим ('a' - append) добавление файла

file_4 = open('test.txt', 'a')
file_4.write(' Maks ') 
file_4.close()

# Копируем один файл и вставим в другом файле

filename_2 = input('Название копируемого файла : ')
filename_3 = input('Введите куда скопировать файл? : ')

file_4 = open(filename_2, 'r')
file_5 = open(filename_3, 'w')

file_5.write( file_4.read() )

file_4.close()
file_5.close()

print('Копирование успешно завершено!')

# Копируем музыку или фото или же видео и вставляем в другой файл

filename_4 = input('Какой файл забэкапить?: ')
filename_5 = 'backup ' + filename_4

file_6 = open(filename_4, 'rb')
file_7 = open(filename_5, 'wb')

file_7.write( file_6.read() )

file_6.close()
file_7.close()

print('Бэкап успешно завершено!')

# файлдармен онай жумыс ыстеу бунын аркасынында временный переменная пайда болады жане мунда ар файлдагыдай close( функциясын пйдаланбаса болады with озы автоматты турде жауып тастайды)

with open('test.txt', 'r') as f: # мунда f временный переменная жане мунда close() функциясын колданбаса болады
	print(f.read())

#---------------Аякталды----------------------------

# Работа со словарями

# Ищем контакт существует ли такой контакт или не существует

contacts = {              # создаем переменную и фигурных скобках открываем словарь так создаются словарь
	'Мама' : '87784658073', # Создаем ключ по именный Мама и номер телефона это списка в словаре Мама
	'Камила' : '87087137127'
}

searching = input('Кого ищем?: ') # Колданушы кымды табуды енгызеды

if searching in contacts:  # Егер Колданушы енгызген адам контакттардын ышынде болса ...
	print('Контакт найден : ' + contacts[searching]) # Экранга контакт бар екендыгын  жане номерын шгарамыз
else:  
	print('Контакт не найден!') #экранга ондай контакт жок екендыгын шгарамыз

# легкий способ 

print( contacts.get(searching, 'Контакт не найден!'))

'''
print( contacts.get(searching, 'Контакт не найден!')) осымен

print( contacts['название ключа']) мынанын не айырмашылыгы бар 

екеуынын айырмашылыгы

print( contacts['название ключа'])

егерде мундай ключ жок болса онда ол KeyError исключениясын шгарады 

ал

print( contacts.get(searching, 'Контакт не найден!')) 

егерде мундай ключ жок болса экранга None типы данныхын шгарады 
жане 
буган екыншы аргумент жазса болады 
егерде ондай ключ жок болса екыншы аргумент ретынде ондай ключ жок деп жазса болады 
сонда
экранга None емес жазылган екыншы аргумент шыгады 
'''

#--------------якталды---------------------------

 # Кортеж метод использоавнии

names = 'Maks', 'Sayat', 'Dias', 'Kuka'  # можно еще с круглым скобками names = ('Maks', 'Sayat', 'Dias', 'Kuka')

print( names[0])

''' 
Кортеж ешкашанда озгерылмейды списки секылды емес 
Егерде массив  озгермейтын болса кортежды колданган дурыс себебы
спискида ол озгерте алатындыктан питон компьютерде коп ресурстарды ыстке косып тежелтеды программаны
'''

#-----------------Аякталды----------------

# Срез в списке (list indexing)

arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # списка создать етемыз

arr_1 = arr[0:]  # 0 ыншы индекстен сонгы индекске шейынгы манге тенестыремыз перемееная arr_1 ге

print(arr_1)

arr_2 = arr[:5] # 0 ыншы индекстен ягни ен бырыншы ин.декстен 5ыншы индекске шейын гана манге тенестыремыз переменная arr_2ыны

print(arr_2)

arr_3 = arr[::2] # бастапкы индекстен сонгы индекске шейын екы кадам аркылы откен манге тенестыремыз переменная arr_3 ты

print(arr_3)

arr_4 = arr[1:8:2] # 1ыншы индекстен 8ыншы индекске шейын 2ы кадам жылжитын манге тенестыремыз переменная arr_4ты

prnt(arr_4)

arr_5 = arr[::-1] # артынан бастап 1 кадам жылжу артка карай сонын маныне тен кылып аламыз переменная arr_5ты
print(arr_5)

arr_6 = arr[-4:-1] # арттан санаганда 4 ыншы индекстен бастап  арттан санаган 1ыншы индекске шейын манды тенестыремыз переменная arr_6ны
print(arr_6)

arr_7 = arr[7:5:-1] # 7ыншы индекстен 5 ыншы индекске шейын 1 кадам артка жылжуына тен кылып аламыз перемнная arr-7
print(arr_7)

arr_8 = arr[-1:-4:-1] #артан санаганда 1ыншы индекстен артан санаганда 4ыншы индекске шейын 1 кадам артка жылжуына тенестырып алмаыз переменная arr_8 ды
print(arr_8)

#--------------------Аякталды---------------

# Форматирование строк

# Первый метод использавание с методом %

name = "Джесси"
age = 21

print( "Привет, %s!\nТебе уже %d год!" %(name,age) )

# %s - Плейсхолдер строки (s-string)
# %d - Плейсхолдер числа  (d-digits)
# %f - Плейсхолдер дроби  (f-float)

# Второй метод использавние format()

print( 'Привет, {}!\nТебе уже {} год!'.format( name, age ) )

print( '{0}{1}{0}'.format('abra', 'cad'))

person_name = 'Maks'
person_age = 16

print( 'Привет, {name}!\nТебе уже {age} год!'.format(name = person_name, age = person_age) )

human = {
	'name' : 'jassy',
	'age' : 21
}

print('Имя: {person[name]}\nВозраст: {person[age]}'.format( person = human ) )

#----------------Аякталды-------------------------

# Некоторые функция для облигшение работый 

fruits = ['Лимон','Клубника','Яблоко']
members = 'James','John','Jack'

# Функция join()

print(','.join( fruits ))

#----------------------------------------------------------

# Функция replace() переводы заменит ягни быр нарсены екыншы нарсеге ауыстырады

print('Привет, Макс!'.replace( 'Макс', 'Кантай' ) )	# мунда Макс деген созды Кантай деген созге ауыстырып экранга шгарады

#----------------------------------------------------------

# Функция upper() and lower(), upper переводы up-котеру,улкейту , er-шы, up котеру er шы, котерушы ягни быр строканы бас арып кылып жыбереды, ал lower переводы low-томен, кышы, er-шы, lower-тусирушы ягни быр строканы кышы арып кылып жыбереды 

what = input('Введите хоть что: ')

print( what.upper() )

print( what.lower() )

#--------------------------------------------------------------

# Функция startswith() and endswith() # startswith переводы starts(начало), with(с) ягни быр нарсе мынандай нарсемен басталса деген соз, ал endswith переводы ends(соны), with(с) ягни быр нарсе мынандай нарсемен аякталса деген соз

surname = input('Ваше имя?: ')

if( surname.lower().startswith('м') or surname.lower().startswith('m') ):
	print( 'Добро пожаловать!\nВы находитесь в элитном клубе людей, имена которых начинается с буквы "М"!' )
else:
	print( 'Добро пожаловать!' )

if( surname.endswith('t') or surname.endswith('т') ):
	print('Hello')
else:
	print('World')

#--------------------------------------------------------------

# Функция split() переводы разбит деген соз ягни ар сойлемды ышыне жазылган аргументтегы символдарга сай болып жыбереды

how = 'Tima_Aziz_Maks_Kamila'

print( how.split('_') ) # мунда how дагы сойлем(Tima_Aziz_Maks_Kamila')-ындегы ар '_' осы символын болып ар турл

#----------------------------------------------------------

# Математические функции min(минималды манын шгарады) , max(максималды манын шгарады) , abs(аргументыне не жазсанда тура санды кайтарады) , sum(Барлыгын косады)

print( min( [5,1,2,8,74,9,5] ) )
print( max( [1,2,6,54,10,2] ) )
print( abs(-1000) )
print( sum( [1,2,3,4,5] ) )


#-----------------------Аякталды---------------------------